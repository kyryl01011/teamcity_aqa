{"name": "Full user story test-case as super admin | UI", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Page.wait_for_selector: Timeout 30000ms exceeded.\nCall log:\n  - waiting for locator(\"div[role=\\\"presentation\\\"] > div:has-text(\\\"Success\\\")\") to be visible", "trace": "authorized_user = <pages.login_page.LoginPage object at 0x0000024796F27E00>, project_data = <function project_data.<locals>._create_project_data at 0x00000247975DB240>\nbuild_conf_data = <function build_conf_data.<locals>._create_build_conf_data at 0x00000247975DB100>, super_admin = <entities.user.User object at 0x0000024796F74510>\n\n    @allure.title('Full user story test-case as super admin | UI')\n    @allure.description('Create new user, project, build configuration and run it | UI')\n    @allure.story('Full user story case | UI')\n    @allure.feature('Manage projects | UI')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.link('https://www.jetbrains.com/help/teamcity/rest/teamcity-rest-api-documentation.html', name='documentation')\n    def test_create_project_manually_with_ui(authorized_user, project_data, build_conf_data, super_admin):\n        with allure.step('Generate project data'):\n            fake_project_data = project_data()\n        with allure.step(f'Create project manually with name: {fake_project_data.name}, id: {fake_project_data.id}'):\n            authorized_user.header.go_to_projects_page()\n            proj_page = ProjectsPage(authorized_user.page)\n            proj_page.press_create_project_button()\n            create_project_page = CreateProjectPage(authorized_user.page)\n            create_project_page.create_project_manually(fake_project_data.name, fake_project_data.id)\n        with allure.step(f'Check if project with id: {fake_project_data.id} was created'):\n            get_created_project_response = super_admin.api_manager.project_api.get_project_by_locator(fake_project_data.id)\n            assert get_created_project_response.ok, f'Unexpected status code: {get_created_project_response.status_code}, failed to get new project with id: {fake_project_data.id}'\n        with allure.step(f'Generate fake build conf data for project with id: {fake_project_data.id}'):\n            build_conf_creation_page = BuildConfCreationPage(authorized_user.page, fake_project_data.id)\n            fake_build_conf_data = build_conf_data(fake_project_data.id)\n        with allure.step(f'Create build configuration for project with id: {fake_project_data.id}'):\n            build_conf_creation_page.go_to_build_conf_creation_page()\n            build_conf_creation_page.creation_method.create_manually()\n            build_conf_creation_page.creation_form.fill_manually_creation_form(fake_build_conf_data.name, fake_build_conf_data.id)\n            build_conf_creation_page.creation_form.click_create_build_conf_button()\n            build_conf_creation_page.wait_for_successful_build_conf_creation()\n        with allure.step(f'Check if build configuration with fake build conf id: {fake_build_conf_data.id} was created'):\n            get_created_project_response = super_admin.api_manager.project_api.get_project_by_locator(fake_project_data.id).text\n            created_project_response = ProjectResponseModel.model_validate_json(get_created_project_response)\n            # Эта проверка тоже работает, но нижняя более гибкая\n            # created_build_conf_id = created_project_response.buildTypes.buildType[0].id\n            # assert created_build_conf_id == fake_build_conf_data.id, f'Got unexpected build conf id: {created_build_conf_id}, expected generated build conf id: {fake_build_conf_data.id}'\n            all_project_builds = created_project_response.buildTypes.buildType\n            assert [True for build in all_project_builds if build.id == fake_build_conf_data.id]\n        with allure.step(f'Run created build with id: {fake_build_conf_data.id}'):\n            build_conf_page = BuildConfPage(authorized_user.page, fake_build_conf_data.id)\n            build_conf_page.go_to_build_conf_page()\n            build_conf_page.click_run_build_button()\n        with allure.step(f'Go to last launched build and wait for success'):\n            launched_build_id = build_conf_page.go_to_launched_build_url()\n            launched_build_page = LaunchedBuildPage(authorized_user.page, fake_build_conf_data.id, launched_build_id)\n>           launched_build_page.wait_for_success()\n\ntests\\frontend\\test_project_ui.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\launched_build_page.py:21: in wait_for_success\n    self.actions.wait_selector(self.build_status_selector)\nactions\\page_actions.py:23: in wait_selector\n    self.page.wait_for_selector(selector)\nvenv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:8183: in wait_for_selector\n    self._sync(\nvenv\\Lib\\site-packages\\playwright\\_impl\\_page.py:425: in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\nvenv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:323: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x0000024796F24C20>, cb = <function Channel.send.<locals>.<lambda> at 0x00000247975DAFC0>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Page.wait_for_selector: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for locator(\"div[role=\\\"presentation\\\"] > div:has-text(\\\"Success\\\")\") to be visible\n\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: TimeoutError"}, "description": "Create new user, project, build configuration and run it | UI", "steps": [{"name": "Generate project data", "status": "passed", "start": 1746034738781, "stop": 1746034738782}, {"name": "Create project manually with name: party, id: d31s6NePKFh", "status": "passed", "steps": [{"name": "Click project selector from header to go to projects page", "status": "passed", "steps": [{"name": "Click selector: \"[data-test-title=\"Projects\"]\"", "status": "passed", "start": 1746034738782, "stop": 1746034738833}], "start": 1746034738782, "stop": 1746034738833}, {"name": "Click selector: \"a[title=\"Create new project\"]\"", "status": "passed", "start": 1746034738833, "stop": 1746034738915}, {"name": "Create project manually", "status": "passed", "steps": [{"name": "Click selector to create project manually", "status": "passed", "steps": [{"name": "Click selector: \"a[href=\"#createManually\"]\"", "status": "passed", "start": 1746034738915, "stop": 1746034739340}], "start": 1746034738915, "stop": 1746034739340}, {"name": "Fill manual project creation form with name = \"party\", id = \"d31s6NePKFh\", desc=\"\"", "status": "passed", "steps": [{"name": "Fill selector: \"input#name\" with text: \"party\"", "status": "passed", "start": 1746034739340, "stop": 1746034739353}, {"name": "Fill selector: \"input#externalId\" with text: \"d31s6NePKFh\"", "status": "passed", "start": 1746034739353, "stop": 1746034739371}, {"name": "Fill selector: \"input#description\" with text: \"\"", "status": "passed", "start": 1746034739371, "stop": 1746034739387}], "start": 1746034739340, "stop": 1746034739387}, {"name": "Click create project button with selector input#createProject", "status": "passed", "steps": [{"name": "Click selector: \"input#createProject\"", "status": "passed", "start": 1746034739387, "stop": 1746034739423}], "start": 1746034739387, "stop": 1746034739423}], "start": 1746034738915, "stop": 1746034739423}], "start": 1746034738782, "stop": 1746034739423}, {"name": "Check if project with id: d31s6NePKFh was created", "status": "passed", "steps": [{"name": "Sending GET request to http://localhost:8111/app/rest/projects/id:d31s6NePKFh with data: None, expected_status: 200", "status": "passed", "start": 1746034739423, "stop": 1746034739435}], "start": 1746034739423, "stop": 1746034739435}, {"name": "Generate fake build conf data for project with id: d31s6NePKFh", "status": "passed", "start": 1746034739435, "stop": 1746034739435}, {"name": "Create build configuration for project with id: d31s6NePKFh", "status": "passed", "steps": [{"name": "Go to build configuration creation page: http://localhost:8111/admin/createObjectMenu.html?projectId=d31s6NePKFh&showMode=createBuildTypeMenu&cameFromUrl#createManually", "status": "passed", "steps": [{"name": "Load url: http://localhost:8111/admin/createObjectMenu.html?projectId=d31s6NePKFh&showMode=createBuildTypeMenu&cameFromUrl#createManually", "status": "passed", "start": 1746034739435, "stop": 1746034739758}], "start": 1746034739435, "stop": 1746034739758}, {"name": "Click selector to create project manually", "status": "passed", "steps": [{"name": "Click selector: \"a[href=\"#createManually\"]\"", "status": "passed", "start": 1746034739758, "stop": 1746034739833}], "start": 1746034739758, "stop": 1746034739833}, {"name": "Fill build conf creation form ", "status": "passed", "steps": [{"name": "Fill selector: \"input#buildTypeName\" with text: \"stay\"", "status": "passed", "start": 1746034739833, "stop": 1746034739852}, {"name": "Fill selector: \"input#buildTypeExternalId\" with text: \"jyz4luwpJPc\"", "status": "passed", "start": 1746034739852, "stop": 1746034739868}, {"name": "Fill selector: \"input#description\" with text: \"\"", "status": "passed", "start": 1746034739868, "stop": 1746034739887}], "start": 1746034739833, "stop": 1746034739887}, {"name": "Click button: input[name=\"createBuildType\"] to create manual build conf", "status": "passed", "steps": [{"name": "Click selector: \"input[name=\"createBuildType\"]\"", "status": "passed", "start": 1746034739887, "stop": 1746034739922}], "start": 1746034739887, "stop": 1746034739922}, {"name": "Wait for successful build conf creation by waiting selector: div.successMessage:has-text(\"successfully\")", "status": "passed", "steps": [{"name": "Wait for selector: \"div.successMessage:has-text(\"successfully\")\"", "status": "passed", "start": 1746034739922, "stop": 1746034740364}], "start": 1746034739922, "stop": 1746034740364}], "start": 1746034739435, "stop": 1746034740364}, {"name": "Check if build configuration with fake build conf id: jyz4luwpJPc was created", "status": "passed", "steps": [{"name": "Sending GET request to http://localhost:8111/app/rest/projects/id:d31s6NePKFh with data: None, expected_status: 200", "status": "passed", "start": 1746034740364, "stop": 1746034740377}], "start": 1746034740364, "stop": 1746034740377}, {"name": "Run created build with id: jyz4luwpJPc", "status": "passed", "steps": [{"name": "Go to build conf page with url: http://localhost:8111/buildConfiguration/jyz4luwpJPc", "status": "passed", "steps": [{"name": "Load url: http://localhost:8111/buildConfiguration/jyz4luwpJPc", "status": "passed", "start": 1746034740378, "stop": 1746034740745}], "start": 1746034740378, "stop": 1746034740745}, {"name": "Click run build button with selector: button[data-test=\"run-build\"]", "status": "passed", "steps": [{"name": "Click selector: \"button[data-test=\"run-build\"]\"", "status": "passed", "start": 1746034740745, "stop": 1746034741351}], "start": 1746034740745, "stop": 1746034741351}], "start": 1746034740378, "stop": 1746034741351}, {"name": "Go to last launched build and wait for success", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Page.wait_for_selector: Timeout 30000ms exceeded.\nCall log:\n  - waiting for locator(\"div[role=\\\"presentation\\\"] > div:has-text(\\\"Success\\\")\") to be visible\n\n", "trace": "  File \"C:\\Apps\\teamcity-tests\\tests\\frontend\\test_project_ui.py\", line 51, in test_create_project_manually_with_ui\n    launched_build_page.wait_for_success()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Apps\\teamcity-tests\\pages\\launched_build_page.py\", line 21, in wait_for_success\n    self.actions.wait_selector(self.build_status_selector)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Apps\\teamcity-tests\\actions\\page_actions.py\", line 23, in wait_selector\n    self.page.wait_for_selector(selector)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 8183, in wait_for_selector\n    self._sync(\n    ~~~~~~~~~~^\n        self._impl_obj.wait_for_selector(\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            selector=selector, timeout=timeout, state=state, strict=strict\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        )\n        ^\n    )\n    ^\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ~~~~~~~~~~~^^\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_page.py\", line 425, in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 323, in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 61, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<2 lines>...\n    )\n    ^\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 528, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n"}, "steps": [{"name": "Go to launched build url from selector: div.ring-message-description a", "status": "passed", "steps": [{"name": "Get value of attribute: href from selector: div.ring-message-description a", "status": "passed", "start": 1746034741352, "stop": 1746034741493}, {"name": "Load url: http://localhost:8111/buildConfiguration/jyz4luwpJPc/234", "status": "passed", "start": 1746034741493, "stop": 1746034741775}], "start": 1746034741352, "stop": 1746034741775}, {"name": "Wait for selector: div[role=\"presentation\"] > div:has-text(\"Success\") to appear", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Page.wait_for_selector: Timeout 30000ms exceeded.\nCall log:\n  - waiting for locator(\"div[role=\\\"presentation\\\"] > div:has-text(\\\"Success\\\")\") to be visible\n\n", "trace": "  File \"C:\\Apps\\teamcity-tests\\pages\\launched_build_page.py\", line 21, in wait_for_success\n    self.actions.wait_selector(self.build_status_selector)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Apps\\teamcity-tests\\actions\\page_actions.py\", line 23, in wait_selector\n    self.page.wait_for_selector(selector)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 8183, in wait_for_selector\n    self._sync(\n    ~~~~~~~~~~^\n        self._impl_obj.wait_for_selector(\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            selector=selector, timeout=timeout, state=state, strict=strict\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        )\n        ^\n    )\n    ^\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ~~~~~~~~~~~^^\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_page.py\", line 425, in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 323, in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 61, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<2 lines>...\n    )\n    ^\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 528, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n"}, "steps": [{"name": "Wait for selector: \"div[role=\"presentation\"] > div:has-text(\"Success\")\"", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Page.wait_for_selector: Timeout 30000ms exceeded.\nCall log:\n  - waiting for locator(\"div[role=\\\"presentation\\\"] > div:has-text(\\\"Success\\\")\") to be visible\n\n", "trace": "  File \"C:\\Apps\\teamcity-tests\\actions\\page_actions.py\", line 23, in wait_selector\n    self.page.wait_for_selector(selector)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 8183, in wait_for_selector\n    self._sync(\n    ~~~~~~~~~~^\n        self._impl_obj.wait_for_selector(\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            selector=selector, timeout=timeout, state=state, strict=strict\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        )\n        ^\n    )\n    ^\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ~~~~~~~~~~~^^\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_page.py\", line 425, in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 323, in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 61, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<2 lines>...\n    )\n    ^\n  File \"C:\\Apps\\teamcity-tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 528, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n"}, "start": 1746034741775, "stop": 1746034771791}], "start": 1746034741775, "stop": 1746034771793}], "start": 1746034741351, "stop": 1746034771794}], "attachments": [{"name": "log", "source": "c85ef7bf-691a-498c-84f5-417cf3410148-attachment.txt", "type": "text/plain"}], "start": 1746034738781, "stop": 1746034771795, "uuid": "89bd4ba6-75bd-4cd8-9cef-18645beb765c", "historyId": "11d0c9165d645d430667700aaec1cceb", "testCaseId": "11d0c9165d645d430667700aaec1cceb", "fullName": "tests.frontend.test_project_ui#test_create_project_manually_with_ui", "labels": [{"name": "severity", "value": "critical"}, {"name": "story", "value": "Full user story case | UI"}, {"name": "feature", "value": "Manage projects | UI"}, {"name": "parentSuite", "value": "tests.frontend"}, {"name": "suite", "value": "test_project_ui"}, {"name": "host", "value": "apachai"}, {"name": "thread", "value": "2920-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.frontend.test_project_ui"}], "links": [{"type": "link", "url": "https://www.jetbrains.com/help/teamcity/rest/teamcity-rest-api-documentation.html", "name": "documentation"}]}